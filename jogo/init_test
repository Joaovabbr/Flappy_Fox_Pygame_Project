import pygame
import random
import time

pygame.init()
#CRIANDO TELA DE CRÃ‰DITOS

tela_creditos = pygame.display.set_mode((800, 600))

fonte_pixel = "Pixelmania.ttf"
fonte_tamanho = 24
fonte = pygame.font.Font(fonte_pixel, fonte_tamanho)

texto = fonte.render("POWERED BY IRA", True, (255, 255, 255))
text_rect = texto.get_rect(center=(400, 300))
tela_creditos.blit(texto, text_rect)
pygame.display.flip()

time.sleep(3)

tela_creditos.fill((0, 0, 0))
pygame.display.flip()

#VARIAVEIS DO JOGO

LARGURA = 900
ALTURA = 500  

LARGURA_RAPOSA = 75
ALTURA_RAPOSA = 65

LARGURA_TUBO = 400
ALTURA_TUBO = 800

ACELERACAO = 1
VELOCIDADE_TUBOS = 10 
ESPACO_ENTRE_TUBOS = 200
DESLIZAR = 4
X = 0
 
relogio = pygame.time.Clock()
FPS = 40

jogando = True

tela = pygame.display.set_mode((LARGURA, ALTURA))
pygame.display.set_caption('Flappy Fox')

img_raposa = pygame.image.load('sprites/img_rap.png').convert_alpha()
img_raposa = pygame.transform.scale(img_raposa, (LARGURA_RAPOSA, ALTURA_RAPOSA))
img_fundo = pygame.image.load('sprites/wallpaper.webp').convert()
img_fundo = pygame.transform.scale(img_fundo, (LARGURA, ALTURA))
img_tubo = pygame.image.load('sprites/tubo.PNG').convert_alpha()
img_tubo = pygame.transform.scale(img_tubo, (LARGURA_TUBO, ALTURA_TUBO)) 

class Raposa(pygame.sprite.Sprite):
    def __init__(self, img):
        pygame.sprite.Sprite.__init__(self)
        self.image = img
        self.rect = self.image.get_rect()
        self.rect.centerx = LARGURA / 2
        self.rect.bottom = ALTURA / 2
        self.speed_y = 0
        self.mask = pygame.mask.from_surface(self.image)

    def update(self): 
        self.speed_y += ACELERACAO
        self.rect.bottom += self.speed_y

        if self.rect.bottom > ALTURA:
            self.rect.bottom = ALTURA

class Tubo(pygame.sprite.Sprite):
    def __init__(self, inverted, xpos, ypos):
        pygame.sprite.Sprite.__init__(self)
        self.image = img_tubo
        self.rect = self.image.get_rect()
        self.rect.x = xpos
        self.rect.height = self.image.get_height()

        if inverted:
            self.image = pygame.transform.flip(self.image, False, True)
            self.rect.y = ypos - self.rect.height
        else:
            self.rect.y = ypos

    def update(self):
        self.rect.x -= VELOCIDADE_TUBOS

    def get_mask(self):
        return pygame.mask.from_surface(self.image)

todos_sprites = pygame.sprite.Group()
raposa_jogo = Raposa(img_raposa)
todos_sprites.add(raposa_jogo)
tubos = pygame.sprite.Group()

def criar_tubos(xpos):
    tamanho = random.randint(100, 150)
    tubo_inferior = Tubo(False, xpos, tamanho)
    tubo_superior = Tubo(True, xpos, tamanho + ESPACO_ENTRE_TUBOS)
    return (tubo_inferior, tubo_superior)

for i in range(2):
    tubo = criar_tubos(LARGURA * i + 800)
    tubos.add(tubo[0])
    tubos.add(tubo[1])

while jogando:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            jogando = False

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                raposa_jogo.speed_y = -10

    tela.blit(img_fundo, (0, 0))
    
    if pygame.sprite.spritecollide(raposa_jogo, tubos, False, pygame.sprite.collide_mask):
        jogando = False

    # Cria novos tubos
    if len(tubos) < 3:
        tubo = criar_tubos(LARGURA + LARGURA_TUBO)
        tubos.add(tubo[0])
        tubos.add(tubo[1])

    todos_sprites.update()
    tubos.update()

    for tubo in tubos.copy():
        if tubo.rect.right < 0:
            tubos.remove(tubo)
            todos_sprites.remove(tubo)

    todos_sprites.draw(tela)
    tubos.draw(tela)

    relogio.tick(FPS)
    pygame.display.update()

#TELA DE GAME OVER (GO)
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

tela_go_largura = 800
tela_go_altura = 600
tela_go = pygame.display.set_mode((tela_go_largura, tela_go_altura))
pygame.display.set_caption("Game Over")

game_over_texto = fonte.render("Game Over", True, WHITE)
restart_texto = fonte.render("Click to Restart", True, WHITE)

game_over_rect = game_over_texto.get_rect(center=(tela_go_largura // 2, tela_go_largura // 2 - 50))
restart_rect = restart_texto.get_rect(center=(tela_go_largura // 2, tela_go_largura // 2 + 50))

#se nao estiver mais jogando:
jogando = False
while jogando:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            jogando = False
        elif event.type == pygame.MOUSEBUTTONDOWN:  # Verificar se o mouse foi clicado
            jogando = False

    # Preencher a tela com a cor preta
    tela_go.fill(BLACK)

    # Desenhar o texto na tela
    tela_go.blit(game_over_texto, game_over_rect)
    tela_go.blit(restart_texto, restart_rect)

    pygame.display.flip()


pygame.quit()
